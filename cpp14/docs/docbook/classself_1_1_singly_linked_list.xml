<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classself_1_1_singly_linked_list" xml:lang="en-US">
<title>self::SinglyLinkedList&lt; T &gt; Class Template Reference</title>
<indexterm><primary>self::SinglyLinkedList&lt; T &gt;</primary></indexterm>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classself_1_1_singly_linked_list_1_1iterator">iterator</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classself_1_1_singly_linked_list_1a2b699f05e82fefa68bee6c4809394fe9"/>void <emphasis role="strong">operator=</emphasis> (std::initializer_list&lt; T &gt; list_)</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_singly_linked_list_1a6a586d15c535681b7b7111d5709d9a5b"/><emphasis role="strong">SinglyLinkedList</emphasis> (const <link linkend="_classself_1_1_singly_linked_list">SinglyLinkedList</link> &amp;)=delete</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_singly_linked_list_1a707d42e7fcbeeae8d8acc7f79c5400c2"/><link linkend="_classself_1_1_singly_linked_list">SinglyLinkedList</link> &amp; <emphasis role="strong">operator=</emphasis> (const <link linkend="_classself_1_1_singly_linked_list">SinglyLinkedList</link> &amp;)=delete</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_singly_linked_list_1a0c7d0109d172b6cc6e32ca09c09faa4b"/>void <emphasis role="strong">_clear</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_singly_linked_list_1a26979f445038c834c802dc4e8e616430"/>INTEGER <emphasis role="strong">size</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_singly_linked_list_1a82c4cc37a66a2b766f030fdb4be7e6d6"/>bool <emphasis role="strong">isEmpty</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_singly_linked_list_1ae4d12ead5800394b0d501f2f4ff1be82"/>T <emphasis role="strong">get</emphasis> (INTEGER index)</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_singly_linked_list_1aca79e67242318b9ede9eb47a36dc5adb"/>T <emphasis role="strong">operator[]</emphasis> (INTEGER index)</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_singly_linked_list_1a21ba4dbd3377e80e44b5c05bcebcee78"/>void <emphasis role="strong">set</emphasis> (T elem, INTEGER index)</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_singly_linked_list_1a9cdd83d277c954f630854e3427951d53"/>void <emphasis role="strong">add</emphasis> (T elem, INTEGER index)</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_singly_linked_list_1a59afed487887c3e4f3a492c4c02f25b6"/>void <emphasis role="strong">add_first</emphasis> (T elem)</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_singly_linked_list_1aef83a53ad4c157f5072fa4595ae6156e"/>void <emphasis role="strong">append</emphasis> (T elem)</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_singly_linked_list_1a4d89c7ee179a18f68e5fccc0b38a860b"/>INTEGER <emphasis role="strong">find</emphasis> (T elem)</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_singly_linked_list_1a7b8564f0935d72f4f16994b3abae4222"/>bool <emphasis role="strong">contains</emphasis> (T elem)</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_singly_linked_list_1a3c4ced5cbf951887a73f78c64fb1c90c"/>bool <emphasis role="strong">remove</emphasis> (T elem)</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_singly_linked_list_1ad59ae50d7892f9360c8b5794733c4c73"/>bool <emphasis role="strong">removeLast</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_singly_linked_list_1a27b740baa9ae9e7021f53be8df5e95b4"/>bool <emphasis role="strong">removeFirst</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_singly_linked_list_1a6ed3a4def4f46c24f30400139a476edb"/><link linkend="_classself_1_1_singly_linked_list_1_1iterator">iterator</link> <emphasis role="strong">begin</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_singly_linked_list_1afb0076343ffe6e0fcf0be7370d5d9a6c"/><link linkend="_classself_1_1_singly_linked_list_1_1iterator">iterator</link> <emphasis role="strong">end</emphasis> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<para>
The documentation for this class was generated from the following file:</para>
D:/My Hosted Projects/Data Structure and Algorithms/cpp14/Data-Structure/Singly_Linked_List/include/SinglyLinkedList/SinglyLinkedList.hpp</section>
