<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classself_1_1_stack_test" xml:lang="en-US">
<title>self::StackTest&lt; T &gt; Class Template Reference</title>
<indexterm><primary>self::StackTest&lt; T &gt;</primary></indexterm>
<para>Inheritance diagram for self::StackTest&lt; T &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classself_1_1_stack_test.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classself_1_1_stack_test_1a9ea6cefa0a21acb6dc9165e0ae37f7e6"/>template&lt;class Q  = T_main&gt; </para><para><emphasis role="strong">ENABLE_IF</emphasis> (IS_SAME(Q, <link linkend="_classself_1_1_stack_array">StackArray</link>&lt; INTEGER &gt;)||IS_SAME(Q, <link linkend="_classself_1_1_stack_linked_list">StackLinkedList</link>&lt; INTEGER &gt;), void) initialize_dependent()</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_stack_test_1a1c318b10d0498d81749eb05c157d7391"/>template&lt;class Q  = T_main&gt; </para><para><emphasis role="strong">ENABLE_IF</emphasis> (IS_SAME(Q, <link linkend="_classself_1_1_stack_array">StackArray</link>&lt; char &gt;)||IS_SAME(Q, <link linkend="_classself_1_1_stack_linked_list">StackLinkedList</link>&lt; char &gt;), void) initialize_dependent()</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_stack_test_1a9e8796023035b2f4d68c298e6f6b66c9"/>template&lt;class Q  = T_main&gt; </para><para><emphasis role="strong">ENABLE_IF</emphasis> (IS_SAME(Q, <link linkend="_classself_1_1_stack_array">StackArray</link>&lt; <link linkend="_classself_1_1_u_d_tf_t">UDTfT</link> &gt;)||IS_SAME(Q, <link linkend="_classself_1_1_stack_linked_list">StackLinkedList</link>&lt; <link linkend="_classself_1_1_u_d_tf_t">UDTfT</link> &gt;), void) initialize_dependent()</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_stack_test_1a3a81d6a789a9deebc7bde7f1637caaa2"/>template&lt;class Q  = T_main&gt; </para><para><emphasis role="strong">ENABLE_IF</emphasis> (!IS_SAME(Q, <link linkend="_classself_1_1_stack_array">StackArray</link>&lt; char &gt;) &amp;&amp;!IS_SAME(Q, <link linkend="_classself_1_1_stack_linked_list">StackLinkedList</link>&lt; char &gt;) &amp;&amp;!IS_SAME(Q, <link linkend="_classself_1_1_stack_array">StackArray</link>&lt; <link linkend="_classself_1_1_u_d_tf_t">UDTfT</link> &gt;) &amp;&amp;!IS_SAME(Q, <link linkend="_classself_1_1_stack_linked_list">StackLinkedList</link>&lt; <link linkend="_classself_1_1_u_d_tf_t">UDTfT</link> &gt;) &amp;&amp;!IS_SAME(Q, <link linkend="_classself_1_1_stack_array">StackArray</link>&lt; INTEGER &gt;) &amp;&amp;!IS_SAME(Q, <link linkend="_classself_1_1_stack_linked_list">StackLinkedList</link>&lt; INTEGER &gt;), void) initialize_dependent()</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_stack_test_1ad7000a60f4348aa6961ac7b6da242330"/>void <emphasis role="strong">initialize_independent</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_stack_test_1af4b002412325348a538fc4f19466a6ef"/>void <emphasis role="strong">SetUp</emphasis> () override</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_stack_test_1af6d00c83385ac9bb645b01646e4c0889"/>void <emphasis role="strong">TearDown</emphasis> () override</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classself_1_1_stack_test_1a761d74c426d511df264ee73b9ef84fe6"/>T_base <emphasis role="strong">objA</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_stack_test_1a243943990f8babfaf796acddc0a36e05"/>T_base <emphasis role="strong">objB</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_stack_test_1a4bb9702c5584be4acefc050e9ad07dfa"/>T_base * <emphasis role="strong">arr</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_stack_test_1a920a92035084103eb4e6e0a82ff825ed"/>T_base <emphasis role="strong">top1</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_stack_test_1ad0a3138c3346cccfb16a6b71814ffdc4"/>T_main <emphasis role="strong">st</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_stack_test_1a481ad90759ff4613bff8683573ee7c35"/>INTEGER <emphasis role="strong">size</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<para>
The documentation for this class was generated from the following file:</para>
D:/My Hosted Projects/Data Structure and Algorithms/cpp14/tests/src/tests Data Structure/tests Stack.cpp</section>
