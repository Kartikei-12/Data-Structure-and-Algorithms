<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classself_1_1_binary_search_tree_test" xml:lang="en-US">
<title>self::BinarySearchTreeTest&lt; T &gt; Class Template Reference</title>
<indexterm><primary>self::BinarySearchTreeTest&lt; T &gt;</primary></indexterm>
<para>Inheritance diagram for self::BinarySearchTreeTest&lt; T &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classself_1_1_binary_search_tree_test.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classself_1_1_binary_search_tree_test_1a86af0637c720c90ad8c1cc4d133a173b"/>template&lt;class Q  = T_main&gt; </para><para><emphasis role="strong">initialize_dependent</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_binary_search_tree_test_1a86af0637c720c90ad8c1cc4d133a173b"/>template&lt;class Q  = T_main&gt; </para><para><emphasis role="strong">initialize_dependent</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_binary_search_tree_test_1a20cd267cf78a1fcdc2e512d917ee2ff8"/>template&lt;class Q  = T_main&gt; </para><para><emphasis role="strong">ENABLE_IF</emphasis> ((std::is_same&lt; Q, <link linkend="_classself_1_1_binary_search_tree">BinarySearchTree</link>&lt; <link linkend="_classself_1_1_u_d_tf_t">UDTfT</link>, <link linkend="_structself_1_1_comparator_class">ComparatorClass</link> &gt;&gt;::value), void) initialize_dependent()</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_binary_search_tree_test_1a593967bca19ab7aedfc910c8601ab4a6"/>template&lt;class Q  = T_main&gt; </para><para><emphasis role="strong">ENABLE_IF</emphasis> (!IS_SAME(Q, <link linkend="_classself_1_1_binary_search_tree">BinarySearchTree</link>&lt; INTEGER &gt;) &amp;&amp;!IS_SAME(Q, <link linkend="_classself_1_1_binary_search_tree">BinarySearchTree</link>&lt; char &gt;) &amp;&amp;!(std::is_same&lt; Q, <link linkend="_classself_1_1_binary_search_tree">BinarySearchTree</link>&lt; <link linkend="_classself_1_1_u_d_tf_t">UDTfT</link>, <link linkend="_structself_1_1_comparator_class">ComparatorClass</link> &gt;&gt;::value), void) initialize_dependent()</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_binary_search_tree_test_1a4986a18f84d89c1dcdb322a537a3d6fb"/>void <emphasis role="strong">initialize_independent</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_binary_search_tree_test_1a475d571192eefad2f81d7ab769344d04"/>void <emphasis role="strong">SetUp</emphasis> () override</para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_binary_search_tree_test_1a966670cb9cc7efcafe9e46706e6cd50e"/>void <emphasis role="strong">TearDown</emphasis> () override</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classself_1_1_binary_search_tree_test_1aa797fbf87ac9bf84e8f3a6d8fc9f7ca2"/>INTEGER <emphasis role="strong">size</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_binary_search_tree_test_1addf577ad957c514fdf7384ec82f52965"/>INTEGER <emphasis role="strong">height</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_binary_search_tree_test_1a385c9947bb359ef30b8e63ded74bf267"/>T_main <emphasis role="strong">bst</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_binary_search_tree_test_1a27d7e3e552296e106330b32134f846ae"/>T_base <emphasis role="strong">root</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_binary_search_tree_test_1a02039e7b1178905c9a7c994c0f5235c8"/>T_base <emphasis role="strong">obj_1</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_binary_search_tree_test_1a173957095a92a273e0cb837e766a9393"/>T_base <emphasis role="strong">objA</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_binary_search_tree_test_1a450cf3a8718a59380c964596b34c27bb"/>T_base <emphasis role="strong">base</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_binary_search_tree_test_1a9330bafd001ad784c2dd1212b86f305f"/>T_base * <emphasis role="strong">pre</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classself_1_1_binary_search_tree_test_1a48a01756a23d02fdccb53fa48a67cdd5"/>T_base * <emphasis role="strong">level</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<para>
The documentation for this class was generated from the following file:</para>
D:/My Hosted Projects/Data Structure and Algorithms/cpp14/tests/src/tests Data Structure/tests Binary Search Tree.cpp</section>
